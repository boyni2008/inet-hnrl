#
# Copyright (C) 2013 Kyeong Soo (Joseph) Kim. All rights reserved.
#
# This ini file provides architecture-specific configurations for an
# abstract model of shared access architectures -- like TDM-PONs or
# DOCSIS cable Internet access -- for the comparison study of
# next-generation network (NGN) access architectures.
#
# Note that [General] section, i.e., configurations common to all
# architectures including those of traffic models, is provided by
# "General.ini".
#


[General]
### [General] section providing configurations common to all network architectures
include General.ini


########################################################################
### Architecture-Specific Settings
########################################################################
[Config Base]
**.host[*].numUdpApps = 1
**.server.numUdpApps = 1
# **.server.udpApp[*].lineRate = ${dr}Mbps	# access rate
**.server.udpApp[*].lineRate = ${br}Gbps	# backbone rate
**.server.udpApp[*].messageLength = 950B	# resulting in 1000-byte Ethernet frame (i.e., UDP(8)+IP(20)+Ethernet(22))
**.server.udpApp[*].messagePeriod = exponential(1s)
**.server.udpApp[*].startTime = uniform(0s, 1s)
### TBM
**.olt.mac[0].meter[*].bucketSize = 1000000B	# 1 MB
**.olt.mac[0].meter[*].peakRate = ${br}Mbps		# It should be set to the backbone rate, not the distribution rate,
												# because we now use metering, not shaping.

[Config DrrTbmBase]
extends = Base
result-dir = results/drr-tbm
**.olt.mac[0].queueType = "DRRVLANQueue"	# OLT downstream queue
**.olt.mac[0].queue.fifoSize = ${qs=1000000}B	# 1MB
**.olt.mac[0].queue.voqSize = ${qs}B

[Config CsfqTbmBase]
extends = Base
result-dir = results/csfq-tbm
**.olt.mac[0].queueType = "CSFQVLANQueue"	# OLT downstream queue
# **.olt.mac[0].queue.queueSize = ${qs=1000000}B	# FIFO queue
# **.olt.mac[0].queue.queueThreshold = int(0.25*${qs})*1B	# quarter of queue size

########################################################################
### Static Configurations: UDP Traffic Models
########################################################################
[Config StaticUdpBase]
extends = Base
### General
sim-time-limit = 1.1min
warmup-period = ${wp=0.1}min
**.thruputMeter.startTime = ${wp}min
**.thruputMeter.*.vector-recording = false
**.olt.mac[0].queue.*.vector-recording = false	# for estimated rates of CSFQ++ algorithm
repeat = 10
### System-wide configuraion
*.N = ${N=16}
**.olt.numSubscribers = ${N}
**.olt.mac[0].queue.numFlows = ${N}
**.olt.mac[0].queue.vids = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"
**.server.numUdpApps = ${N}
## Group 1: SR=16Mbps, TGR=2.5Mbps
**.server.udpApp[0].destAddresses = "host[0]"
**.server.udpApp[1].destAddresses = "host[1]"
**.server.udpApp[2].destAddresses = "host[2]"
**.server.udpApp[3].destAddresses = "host[3]"
# **.server.udpApp[0..3].messagePeriod = 4ms
# **.olt.mac[0].meter[0..3].meanRate = 5Mbps
**.server.udpApp[0..3].messagePeriod = 0.5ms
**.olt.mac[0].meter[0..3].meanRate = 2.5Mbps
## Group 2: SR=16Mbps, TGR=5Mbps
**.server.udpApp[4].destAddresses = "host[4]"
**.server.udpApp[5].destAddresses = "host[5]"
**.server.udpApp[6].destAddresses = "host[6]"
**.server.udpApp[7].destAddresses = "host[7]"
# **.server.udpApp[4..7].messagePeriod = 2ms
# **.olt.mac[0].meter[4..7].meanRate = 5Mbps
**.server.udpApp[4..7].messagePeriod = 0.5ms
**.olt.mac[0].meter[4..7].meanRate = 5Mbps
## Group 3: SR=16Mbps, TGR=7.5Mbps
**.server.udpApp[8].destAddresses = "host[8]"
**.server.udpApp[9].destAddresses = "host[9]"
**.server.udpApp[10].destAddresses = "host[10]"
**.server.udpApp[11].destAddresses = "host[11]"
# **.server.udpApp[8..11].messagePeriod = 1ms
# **.olt.mac[0].meter[8..11].meanRate = 7.5Mbps
**.server.udpApp[8..11].messagePeriod = 0.5ms
**.olt.mac[0].meter[8..11].meanRate = 7.5Mbps
## Group 4: SR=2Mbps, TGR=10Mbps
**.server.udpApp[12].destAddresses = "host[12]"
**.server.udpApp[13].destAddresses = "host[13]"
**.server.udpApp[14].destAddresses = "host[14]"
**.server.udpApp[15].destAddresses = "host[15]"
# **.server.udpApp[12..15].messagePeriod = 0.5ms
# **.olt.mac[0].meter[12..15].meanRate = 7.5Mbps
**.server.udpApp[12..15].messagePeriod = 4ms
**.olt.mac[0].meter[12..15].meanRate = 10Mbps

# [Config StaticUdpBase2]
# extends = StaticUdpBase
# ## Group 1: SR=16Mbps, TGR=2.5Mbps
# **.server.udpApp[0..3].messagePeriod = 0.5ms
# **.olt.mac[0].meter[0..3].meanRate = 2.5Mbps
# ## Group 2: SR=16Mbps, TGR=5Mbps
# **.server.udpApp[4..7].messagePeriod = 0.5ms
# **.olt.mac[0].meter[4..7].meanRate = 5Mbps
# ## Group 3: SR=16Mbps, TGR=7.5Mbps
# **.server.udpApp[8..11].messagePeriod = 0.5ms
# **.olt.mac[0].meter[8..11].meanRate = 7.5Mbps
# ## Group 4: SR=2Mbps, TGR=10Mbps
# **.server.udpApp[12..15].messagePeriod = 4ms
# **.olt.mac[0].meter[12..15].meanRate = 10Mbps

[Config drr-tbm_static_udp]
extends = DrrTbmBase, StaticUdpBase
# **.olt.mac[0].queue.quanta = "1522 1522 1522 1522 1522 1522 1522 1522 2283 2283 2283 2283 2283 2283 2283 2283"
# # **.olt.mac[0].queue.quanta = "500 500 500 500 500 500 500 500 750 750 750 750 750 750 750 750"
**.olt.mac[0].queue.quanta = "1522 1522 1522 1522 3044 3044 3044 3044 4566 4566 4566 4566 6088 6088 6088 6088"
# **.olt.mac[0].queue.quanta = "500 500 500 500 1000 1000 1000 1000 1500 1500 1500 1500 2000 2000 2000 2000"

# [Config drr-tbm_static_udp2]
# extends = DrrTbmBase, StaticUdpBase2
# **.olt.mac[0].queue.quanta = "1522 1522 1522 1522 3044 3044 3044 3044 4566 4566 4566 4566 6088 6088 6088 6088"
# # **.olt.mac[0].queue.quanta = "500 500 500 500 1000 1000 1000 1000 1500 1500 1500 1500 2000 2000 2000 2000"

[Config csfq-tbm_static_udp]
extends = CsfqTbmBase, StaticUdpBase
**.olt.mac[0].queue.queueSize = ${qs=($N)*1000000}*1B	# FIFO queue

# [Config csfq-tbm_static_udp2]
# extends = CsfqTbmBase, StaticUdpBase2
# **.olt.mac[0].queue.queueSize = ${qs=($N)*1000000}B	# FIFO queue

[Config csfq-tbm2_static_udp]
extends = CsfqTbmBase, StaticUdpBase
**.olt.mac[0].queueType = "CSFQVLANQueue2"	# OLT downstream queue
**.olt.mac[0].queue.queueSize = ${qs=1000000}B	# FIFO queue
**.olt.mac[0].queue.queueThreshold = int(0.25*${qs})*1B	# quarter of queue size

########################################################################
### Static Configurations: TCP & UDP Traffic Models
########################################################################
[Config StaticTcpUdpBase]
extends = Base
### General
sim-time-limit = 1.1min
warmup-period = ${wp=0.1}min
**.thruputMeter.startTime = ${wp}min
**.thruputMeter.*.vector-recording = false
**.olt.mac[0].queue.*.vector-recording = false	# for estimated rates of CSFQ++ algorithm
repeat = 10
### System-wide configuraion
*.N = ${N=16}
**.olt.numSubscribers = ${N}
**.olt.mac[0].queue.numFlows = ${N}
**.olt.mac[0].queue.vids = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"
### Server
**.server.numFtpSrvs = 1
**.server.numUdpApps = 12
## Group 1: UDP with SR=16Mbps & TGR=2.5Mbps
**.server.udpApp[0].destAddresses = "host[0]"
**.server.udpApp[1].destAddresses = "host[1]"
**.server.udpApp[2].destAddresses = "host[2]"
**.server.udpApp[3].destAddresses = "host[3]"
# **.server.udpApp[0..3].messagePeriod = 4ms
# **.olt.mac[0].meter[0..3].meanRate = 5Mbps
**.server.udpApp[0..3].messagePeriod = 0.5ms
**.olt.mac[0].meter[0..3].meanRate = 2.5Mbps
## Group 2: UDP with SR=16Mbps & TGR=5Mbps
**.server.udpApp[4].destAddresses = "host[4]"
**.server.udpApp[5].destAddresses = "host[5]"
**.server.udpApp[6].destAddresses = "host[6]"
**.server.udpApp[7].destAddresses = "host[7]"
# **.server.udpApp[4..7].messagePeriod = 2ms
# **.olt.mac[0].meter[4..7].meanRate = 5Mbps
**.server.udpApp[4..7].messagePeriod = 0.5ms
**.olt.mac[0].meter[4..7].meanRate = 5Mbps
## Group 3: UDP with SR=16Mbps & TGR=7.5Mbps
**.server.udpApp[8].destAddresses = "host[8]"
**.server.udpApp[9].destAddresses = "host[9]"
**.server.udpApp[10].destAddresses = "host[10]"
**.server.udpApp[11].destAddresses = "host[11]"
# **.server.udpApp[8..11].messagePeriod = 1ms
# **.olt.mac[0].meter[8..11].meanRate = 7.5Mbps
**.server.udpApp[8..11].messagePeriod = 0.5ms
**.olt.mac[0].meter[8..11].meanRate = 7.5Mbps
## Group 4: Greedy TCP with TGR=10Mbps
**.host[12..15].numFtpApps = 1
**.host[12..15].numUdpApps = 0
**.host[12..15].ftpApp[*].fileSize=1GiB	# to emulate greedy source
**.host[12..15].ftpApp[*].startTime = uniform(0s, 1s)	# to prevent synchronization effect
**.olt.mac[0].meter[12..15].meanRate = 10Mbps

[Config drr-tbm_static_tcp-udp]
extends = DrrTbmBase, StaticTcpUdpBase
# **.olt.mac[0].queue.quanta = "1522 1522 1522 1522 1522 1522 1522 1522 2283 2283 2283 2283 2283 2283 2283 2283"
# # **.olt.mac[0].queue.quanta = "500 500 500 500 500 500 500 500 750 750 750 750 750 750 750 750"
**.olt.mac[0].queue.quanta = "1522 1522 1522 1522 3044 3044 3044 3044 4566 4566 4566 4566 6088 6088 6088 6088"
# **.olt.mac[0].queue.quanta = "500 500 500 500 1000 1000 1000 1000 1500 1500 1500 1500 2000 2000 2000 2000"

[Config csfq-tbm_static_tcp-udp]
extends = CsfqTbmBase, StaticTcpUdpBase
**.olt.mac[0].queue.queueSize = ${qs=($N)*1000000}*1B	# FIFO queue

[Config csfq-tbm_static_tcp-udp_ws]
extends = csfq-tbm_static_tcp-udp
### TCP
**.tcp.windowScalingSupport = true	# enable window scaling support
**.tcp.advertisedWindow = 65535*100
#**.tcp.advertisedWindow = 65535*10
#**.tcp.advertisedWindow = 65535

[Config csfq-tbm_static_tcp-udp_ws_bs10M]
extends = csfq-tbm_static_tcp-udp_ws
### TBM
**.olt.mac[0].meter[*].bucketSize = 10000000B	# 10 MB

[Config csfq-tbm2_static_tcp-udp]
extends = CsfqTbmBase, StaticTcpUdpBase
**.olt.mac[0].queueType = "CSFQVLANQueue2"	# OLT downstream queue
**.olt.mac[0].queue.queueSize = ${qs=1000000}B	# FIFO queue
**.olt.mac[0].queue.queueThreshold = int(0.25*${qs})*1B	# quarter of queue size

########################################################################
### Dynamic Configurations: UDP Traffic Models
########################################################################
[Config DynamicUdpBase]
extends = Base
### General
sim-time-limit = 30s
warmup-period = 0s
**.thruputMeter.startTime = 0s
**.thruputMeter.*.vector-recording = true
**.olt.mac[0].queue.*.vector-recording = false	# for estimated rates of CSFQ++ algorithm
repeat = 1
### Network configuraion
*.N = ${N=4}
**.olt.numSubscribers = ${N}
**.olt.mac[0].queue.numFlows = ${N}
**.olt.mac[0].queue.vids = "10 11 12 13"
### Server
**.server.numUdpApps = ${N}
# Flow 1: SR=64Mbps, TGR=10Mbps
**.server.udpApp[0].destAddresses = "host[0]"
**.server.udpApp[0].messagePeriod = 0.125ms
**.server.udpApp[0].startTime = 1s
**.olt.mac[0].meter[0].meanRate = 10Mbps
# Flow 2: SR=64Mbps, TGR=20Mbps
**.server.udpApp[1].destAddresses = "host[1]"
**.server.udpApp[1].messagePeriod = 0.125ms
**.server.udpApp[1].startTime = 1s
**.olt.mac[0].meter[1].meanRate = 20Mbps
# Flow 3: SR=64Mbps, TGR=30Mbps
**.server.udpApp[2].destAddresses = "host[2]"
**.server.udpApp[2].messagePeriod = 0.125ms
**.server.udpApp[2].startTime = 1s
**.olt.mac[0].meter[2].meanRate = 30Mbps
# Flow 4: SR=16Mbps, TGR=40Mbps
**.server.udpApp[3].destAddresses = "host[3]"
**.server.udpApp[3].messagePeriod = 0.5ms
**.server.udpApp[3].startTime = 10s
**.olt.mac[0].meter[3].meanRate = 40Mbps

[Config drr-tbm_dynamic_udp]
extends = DrrTbmBase, DynamicUdpBase
**.olt.mac[0].queue.quanta = "1522 3044 4566 6088"
# **.olt.mac[0].queue.quanta = "500 1000 1500 2000"

[Config csfq-tbm_dynamic_udp]
extends = CsfqTbmBase, DynamicUdpBase
**.olt.mac[0].queue.queueSize = ${qs=($N)*1000000}*1B	# FIFO queue

########################################################################
### Dynamic Configurations: TCP & UDP Traffic Models
########################################################################
[Config DynamicTcpUdpBase]
extends = Base
### General
sim-time-limit = 60s
warmup-period = 0s
**.thruputMeter.startTime = 0s
**.thruputMeter.*.vector-recording = true
**.olt.mac[0].queue.*.vector-recording = true	# for estimated rates of CSFQ++ algorithm
repeat = 1
### Network configuraion
*.N = ${N=4}
**.olt.numSubscribers = ${N}
**.olt.mac[0].queue.numFlows = ${N}
**.olt.mac[0].queue.vids = "10 11 12 13"
### Server
**.server.numFtpSrvs = 1
**.server.numUdpApps = 1
# Flow 1-3: Greedy TCP with TGR of 10, 20,and 30Mbps
**.host[0..2].numFtpApps = 1
**.host[0..2].numUdpApps = 0
**.host[0..2].ftpApp[*].fileSize=1GiB	# to emulate greedy source
**.host[0..2].ftpApp[*].startTime = uniform(1s, 1.1s)	# to prevent synchronization effect
**.olt.mac[0].meter[0].meanRate = 10Mbps
**.olt.mac[0].meter[1].meanRate = 20Mbps
**.olt.mac[0].meter[2].meanRate = 30Mbps
# Flow 4: SR=16Mbps, TGR=40Mbps
**.host[3].numFtpApps = 0
**.host[3].numUdpApps = 1
**.server.udpApp[0].destAddresses = "host[3]"	# note that we have only one udpApp (i.e., udpApp[0]) at the server!
**.server.udpApp[0].messagePeriod = 0.5ms
**.server.udpApp[0].startTime = 30s
**.olt.mac[0].meter[3].meanRate = 40Mbps

[Config drr-tbm_dynamic_tcp-udp]
extends = DrrTbmBase, DynamicTcpUdpBase
**.olt.mac[0].queue.quanta = "1522 3044 4566 6088"
# **.olt.mac[0].queue.quanta = "500 1000 1500 2000"

[Config csfq-tbm_dynamic_tcp-udp]
extends = CsfqTbmBase, DynamicTcpUdpBase
**.olt.mac[0].queue.queueSize = ${qs=($N)*1000000}*1B	# FIFO queue

[Config csfq-tbm_dynamic_tcp-udp_K20m_Ka40m]
extends = csfq-tbm_dynamic_tcp-udp
**.olt.mac[0].queue.K = 20ms
**.olt.mac[0].queue.K_alpha = 40ms

[Config csfq-tbm_dynamic_tcp-udp_ws]
extends = csfq-tbm_dynamic_tcp-udp
### TCP
**.tcp.windowScalingSupport = true	# enable window scaling support
**.tcp.advertisedWindow = 65535*100
#**.tcp.advertisedWindow = 65535*10
#**.tcp.advertisedWindow = 65535

[Config csfq-tbm_dynamic_tcp-udp_ws_bs10M]
extends = csfq-tbm_dynamic_tcp-udp_ws
### TBM
**.olt.mac[0].meter[*].bucketSize = 10000000B	# 10 MB

########################################################################
### Debugging
########################################################################
[Config DynamicTcpUdpDebugBase]
extends = Base
### General
sim-time-limit = 30s
warmup-period = 0s
**.thruputMeter.startTime = 0s
**.thruputMeter.*.vector-recording = true
**.olt.mac[0].queue.*.vector-recording = true	# for estimated rates of CSFQ++ algorithm
repeat = 1
### Network configuraion
#*.N = ${N=4}
*.N = ${N=1}
**.olt.numSubscribers = ${N}
**.olt.mac[0].queue.numFlows = ${N}
#**.olt.mac[0].queue.vids = "10 11 12 13"
**.olt.mac[0].queue.vids = "10"
### Server
**.server.numFtpSrvs = 1
#**.server.numUdpApps = 1
**.server.numUdpApps = 0
# Flow 1-3: Greedy TCP with TGR of 10, 20,and 30Mbps
#**.host[0..2].numFtpApps = 1
**.host[0].numFtpApps = 1
#**.host[0..2].numUdpApps = 0
**.host[0].numUdpApps = 0
#**.host[0..2].ftpApp[*].fileSize=500000000B	# 500MB (emulating greedy source for 30s with 100Mbps)
												#**.host[0..2].ftpApp[*].startTime = 1s
**.host[0].ftpApp[*].fileSize=500000000B	# 500MB (emulating greedy source for 30s with 100Mbps)
#**.host[0].ftpApp[*].fileSize=1MiB
**.host[0].ftpApp[*].startTime = 1s
#**.host[0].ftpApp[*].idleInterval = uniform(0s, 5s)
#**.host[0].ftpApp[*].reconnectInterval = 1s
**.olt.mac[0].meter[0].meanRate = ${dr}Mbps
#**.olt.mac[0].meter[0].meanRate = 10Mbps
#**.olt.mac[0].meter[1].meanRate = 20Mbps
#**.olt.mac[0].meter[2].meanRate = 30Mbps
## Flow 4: SR=16Mbps, TGR=40Mbps
#**.host[3].numFtpApps = 0
#**.host[3].numUdpApps = 1
#**.server.udpApp[0].destAddresses = "host[3]"	# note that we have only one udpApp (i.e., udpApp[0]) at the server!
#**.server.udpApp[0].messagePeriod = 0.5ms
#**.server.udpApp[0].startTime = 10s
#**.olt.mac[0].meter[3].meanRate = 40Mbps

[Config drr-tbm_dynamic_debug]
extends = DrrTbmBase, DynamicTcpUdpDebugBase
#**.olt.mac[0].queue.quanta = "1522 3044 4566 6088"
**.olt.mac[0].queue.quanta = "1522"
# **.olt.mac[0].queue.quanta = "500 1000 1500 2000"

[Config csfq-tbm_dynamic_debug]
extends = CsfqTbmBase, DynamicTcpUdpDebugBase
**.olt.mac[0].queue.queueSize = ${qs=($N)*1000000}*1B	# FIFO queue
